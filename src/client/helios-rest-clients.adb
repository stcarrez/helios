--  Hyperion API
--  Hyperion Monitoring API The monitoring agent is first registered so that the server knows it as well as its security key.  Each host are then registered by a monitoring agent. 
--
--  OpenAPI spec version: 1.0.0
--  Contact: Stephane.Carrez@gmail.com
--
--  NOTE: This package is auto generated by the swagger code generator 3.2.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.
with Swagger.Streams;
package body Helios.Rest.Clients is

   --  Register a monitoring agent
   --  Register a new monitoring agent in the system
   procedure Register_Agent
      (Client : in out Client_Type;
       Name : in Swagger.UString;
       Ip : in Swagger.UString;
       Agent_Key : in Swagger.UString;
       Result : out Helios.Rest.Models.Agent_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      Req.Stream.Write_Entity ("name", Name);
      Req.Stream.Write_Entity ("ip", Ip);
      Req.Stream.Write_Entity ("agentKey", Agent_Key);

      URI.Set_Path ("/agents");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Helios.Rest.Models.Deserialize (Reply, "", Result);
   end Register_Agent;

   --  Create a host
   --  Register a new host in the monitoring system
   procedure Create_Host
      (Client : in out Client_Type;
       Name : in Swagger.UString;
       Ip : in Swagger.UString;
       Host_Key : in Swagger.UString;
       Agent_Key : in Swagger.UString;
       Agent_Id : in Integer;
       Result : out Helios.Rest.Models.Host_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      Req.Stream.Write_Entity ("name", Name);
      Req.Stream.Write_Entity ("ip", Ip);
      Req.Stream.Write_Entity ("hostKey", Host_Key);
      Req.Stream.Write_Entity ("agentKey", Agent_Key);
      Req.Stream.Write_Entity ("agentId", Agent_Id);

      URI.Set_Path ("/hosts");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Helios.Rest.Models.Deserialize (Reply, "", Result);
   end Create_Host;
end Helios.Rest.Clients;
